#!/bin/bash
set -euo pipefail

SELF="$( cd -- "$(dirname "$0")/.." ; pwd -P )/usr"
ARCH_TRIPLETS=( @ARCH_TRIPLETS@ )

# VDPAU_DRIVER_PATH only supports a single path, rely on LD_LIBRARY_PATH instead
for arch in ${ARCH_TRIPLETS[@]}; do
  GBM_BACKENDS_PATH=${GBM_BACKENDS_PATH:+$GBM_BACKENDS_PATH:}${SELF}/lib/${arch}/gbm
  LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}${SELF}/lib/${arch}:${SELF}/lib/${arch}/vdpau
  LIBGL_DRIVERS_PATH=${LIBGL_DRIVERS_PATH:+$LIBGL_DRIVERS_PATH:}${SELF}/lib/${arch}/dri/
  LIBVA_DRIVERS_PATH=${LIBVA_DRIVERS_PATH:+$LIBVA_DRIVERS_PATH:}${SELF}/lib/${arch}/dri/
done
__EGL_VENDOR_LIBRARY_DIRS=${__EGL_VENDOR_LIBRARY_DIRS:+$__EGL_VENDOR_LIBRARY_DIRS:}${SELF}/share/glvnd/egl_vendor.d
__EGL_EXTERNAL_PLATFORM_CONFIG_DIRS=${__EGL_EXTERNAL_PLATFORM_CONFIG_DIRS:+$__EGL_EXTERNAL_PLATFORM_CONFIG_DIRS:}${SELF}/share/egl/egl_external_platform.d
VK_LAYER_PATH=${VK_LAYER_PATH:+$VK_LAYER_PATH:}${SELF}/share/vulkan/implicit_layer.d/:${SELF}/share/vulkan/explicit_layer.d/
XDG_DATA_DIRS=${XDG_DATA_DIRS:+$XDG_DATA_DIRS:}${SELF}/share

# libhybris setup & tls-padding
HYBRIS_LINKER_DIR=${SELF}/lib/${arch}/libhybris/linker
HYBRIS_EGLPLATFORM_DIR=${SELF}/lib/${arch}/libhybris
LD_PRELOAD=${LD_PRELOAD:+$LD_PRELOAD:}${SELF}/lib/${arch}/libtls-padding.so

# These are in the default LD_LIBRARY_PATH, but we don't want those.
# These are from the host in a potentially different ABI.
if [ -d "/var/lib/snapd/lib/gl" ] && [ $(echo "${LD_LIBRARY_PATH}" | grep "/var/lib/snapd/lib/gl:") ]; then
  LD_LIBRARY_PATH=$(echo "$LD_LIBRARY_PATH" | sed -e 's|/var/lib/snapd/lib/gl:||g')
fi

# Same for 32bit
if [ -d "/var/lib/snapd/lib/gl32" ] && [ $(echo "${LD_LIBRARY_PATH}" | grep "/var/lib/snapd/lib/gl32:") ]; then
  LD_LIBRARY_PATH=$(echo "$LD_LIBRARY_PATH" | sed -e 's|/var/lib/snapd/lib/gl32:||g')
fi

if [ -d "/var/lib/snapd/lib/glvnd/egl_vendor.d" ]; then
  # This needs to be prepended, as glvnd goes depth-first on these
  # TODO maybe collect the JSONs into a separate location so their ordering matters,
  #  and not the dir order
  __EGL_VENDOR_LIBRARY_DIRS=/var/lib/snapd/lib/glvnd/egl_vendor.d:${__EGL_VENDOR_LIBRARY_DIRS}
fi

if [ -d "/var/lib/snapd/lib/vulkan/icd.d" ]; then
  XDG_DATA_DIRS=${XDG_DATA_DIRS}:/var/lib/snapd/lib
fi

if [ -d "/var/lib/snapd/lib/gl/vdpau" ]; then
  LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/var/lib/snapd/lib/gl/vdpau
fi

if [ -d "/var/lib/snapd/lib/gl32/vdpau" ]; then
  LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/var/lib/snapd/lib/gl32/vdpau
fi

if [ -d "/var/lib/snapd/lib/gl/gbm" ]; then
  GBM_BACKENDS_PATH=${GBM_BACKENDS_PATH}:/var/lib/snapd/lib/gl/gbm
fi

if [ -d "/var/lib/snapd/lib/gl32/gbm" ]; then
  GBM_BACKENDS_PATH=${GBM_BACKENDS_PATH}:/var/lib/snapd/lib/gl32/gbm
fi

export GBM_BACKENDS_PATH
export LD_LIBRARY_PATH
export LIBGL_DRIVERS_PATH
export LIBVA_DRIVERS_PATH
export __EGL_VENDOR_LIBRARY_DIRS
export __EGL_EXTERNAL_PLATFORM_CONFIG_DIRS
export VK_LAYER_PATH
export XDG_DATA_DIRS
export HYBRIS_LINKER_DIR
export HYBRIS_EGLPLATFORM_DIR
export LD_PRELOAD

exec "$@"
